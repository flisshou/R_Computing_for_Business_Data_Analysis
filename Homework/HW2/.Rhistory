x = c(2, 8, 8, 2, 5, 2, 5, 2)
second.small = function (input) {
output <- unique(sort(input, decreasing = FALSE))
output[2]
}
second.small(x)
f.divide = function (n) {
index = 2
result = c()
while (index < n) {
if(n %% index == 0) {
result = append(result, index)
}
index = index + 1
}
length(result)
}
f.divide(100)
tolerence = 10^(-5)
tolerance = 10^(-5)
tolerance
f.divide = function (n) {
index = 2
result = c()
while (index < n) {
if(n %% index == 0) {
result = append(result, index)
}
index = index + 1
}
length(result)
print(result)
}
f.divide(100)
f.divide = function (n) {
index = 2
result = c()
while (index < n) {
if(n %% index == 0) {
result = append(result, index)
}
index = index + 1
}
length(result)
#print(result)
}
f.divide(100)
second.small = function (input) {
output <- unique(sort(input, decreasing = FALSE))
return(output[2])
}
second.small(x)
f.divide = function (n) {
index = 2
result = c()
while (index < n) {
if(n %% index == 0) {
result = append(result, index)
}
index = index + 1
}
return(length(result))
#print(result)
}
f.divide(100)
f.divide = function (n) {
index = 2
result = c()
while (index < n) {
if(n %% index == 0) {
result = append(result, index)
}
index = index + 1
}
print(result)
return(length(result))
}
f.divide(100)
S1 = 125348
X1_1 = S1^(1/2)
X1_1
f(100)
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
while(abs(f(x+1) - f(x)) < tolerance) {
y = 0.5*x + (S1 / x)
}
return(y)
}
f(100)
abs(3-5)
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
while(abs(f(x+1) - f(x)) < tolerance) {
y = 0.5*x + (S1 / x)
return(y)
}
}
f(100)
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5*x + (S1 / x)
while(abs(f(y) - f(x)) < tolerance) {
return(y)
}
}
f(100)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5*x + (S1 / x)
if(abs(f(y) - f(x)) < tolerance) {
return(y)
}
}
f(100)
0.5*X0 + (S1 / 0.5)
(0.5 * X0) + (S1 / 0.5)
0.5 * (X0 + (S1 / 0.5))
0.5 * (X0 + (S1 / X0))
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5 * (x + (S1 / x))
#  if(abs(f(y) - f(x)) < tolerance) {
#    return(y)
#  }
while(abs(f(y) - f(x)) >= tolerance) {
}
}
0.5 * (X0 + (S1 / X0))
f(600)
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5 * (x + (S1 / x))
#  if(abs(f(y) - f(x)) < tolerance) {
#    return(y)
#  }
while(abs(f(y) - f(x)) >= tolerance) {
return(y)
}
}
0.5 * (X0 + (S1 / X0))
f(600)
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5(x + (S1/x))
while (abs(y - x) >= tolerance) {
return(f(y))
}
}
f(600)
f(600)
f = function(x) {
y = 0.5(x + (S1/x))
while (abs(y - x) >= tolerance) {
return(f(y))
}
print(y)
}
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5(x + (S1/x))
while (abs(y - x) >= tolerance) {
return(f(y))
}
print(y)
}
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5(x + (S1/x))
return(y)
}
f(X0)
tolerance = 10^(-5)
S1 = 125348
X0 = 600
f = function(x) {
y = 0.5(x + (S1/x))
return(y)
}
f(X0)
f(600)
y = 0.5(x + (S1/x))
f = function(x) {
return(0.5(x + (S1/x)))
}
f(600)
tolerance = 10^(-5)
S1 = 125348
X0 = 600
babylonian = function(x) {
return(0.5(x + (S1/x)))
}
babylonian(600)
babylonian = function(x) {
S1 = 125348
return(0.5(x + (S1/x)))
}
babylonian(600)
abylonian = function(value) {
S1 = 125348
return(0.5(value + (S1/value)))
}
babylonian(600)
f = 0.5(X0 + (S1/X0))
tolerance = 10^(-5)
X0 = 600
S1 = 125348
f = 0.5(X0 + (S1/X0))
tolerance = 10^(-5)
X0 = 600
S1 = 125348
tolerance = 10^(-5)
X0 = 600
S1 = 125348
hi = function(x) {
return(x *3)
}
hi(X0)
tolerance = 10^(-5)
S1 = 125348
X = 600
Y = 0.5*(X + S1/X)
while (abs(Y-X) >= tolerance) {
X = Y
Y = 0.5*(X + S1/X)
}
print(X)
S0 = 125348
X0 = 600
Y0 = 0.5*(X0 + S0/X0)
while (abs(Y0-X0) >= tolerance) {
X0 = Y0
Y0 = 0.5*(X0 + S0/X0)
}
print(X0)
S0 = 125348
X0 = 600
Y0 = 0.5*(X0 + S0/X0)
babylonian = function (X, S) {
Y = 0.5*(X + S/X)
while(abs(Y-X) >= tolerance) {
X = Y
Y = 0.5*(X + S/X)
}
return(X)
}
babylonian(X0, S0)
tolerance = 10^(-5)
babylonian = function (X, S) {
Y = 0.5*(X + S/X)
while(abs(Y-X) >= tolerance) {
X = Y
Y = 0.5*(X + S/X)
}
return(X)
}
#Case 0:
S0 = 125348
X0 = 600
babylonian(X0, S0)
S1 = 9526
X1 = 87
babylonian(X1, S0)
S1 = 9526
X1 = 87
babylonian(X1, S1)
S2 = 5566
X2 = 78
babylonian(X2, S2)
sqrt(S1)
sqrt(S2)
tolerance = 10^(-5)
babylonian = function (S, X) {
Y = 0.5*(X + S/X)
while(abs(Y-X) >= tolerance) {
X = Y
Y = 0.5*(X + S/X)
}
return(X)
}
#Case 0:
S0 = 125348
X0 = 600
babylonian(S0, X0)
#Case 1:
S1 = 9526
X1 = 87
babylonian(S1, X1)
#sqrt(S1)
#Case 2:
S2 = 5566
X2 = 78
babylonian(S2, X2)
#sqrt(S2)
